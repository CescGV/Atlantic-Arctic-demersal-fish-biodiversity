### Library
library(tidyverse)
library(mgcv)
library(sjPlot)
library(AER)
library(MASS)
library(raster)
library(tidyverse)
library(gridExtra)

# My functions

round_05 <- function(x) {
  if (round(x) > x) {round(x) - 0.5}
  else if (round(x) <= x) {round(x) + 0.5}
}
variance <- function(x){sum((x-mean(x))^2)/length(x)}
se <- function(x) {sqrt(variance(x))/sqrt(length(x))}

### Exploratory analysis and some further cleaning ### ####

# Load data, unselect max_length and min_length, because they contain many NAs and not needed for the analysis

full_dataset = read_csv("C:/Users/06061016/Documents/Treball/Costello/IMR1980-2017/Final analysis/data_filtered_seas.csv")
full_dataset = full_dataset %>% select(- Max_length, - Min_length)

# Swept area transformation to Km2 instead of m2, and exploration of effort distribution with time, and range 

full_dataset$swept_area = full_dataset$swept_area / 10000 
boxplot(swept_area ~ Year, data = full_dataset)
range(full_dataset$swept_area) # From 0.5 to 28.5 Km2

# Figure of the geographical distribution of the effort, this figure could be added to the supplementary material to report the survey area across years. 

pdf("data_across_sites.pdf", height = 20, width = 20)
ggplot(full_dataset, aes(x = Longitude, y = Latitude)) + geom_point() + facet_wrap(.~ Year)
dev.off()

# Now the idea is to get an extra column with coordinates round to 0.5, so that I keep the identity of each trawling
# but also get a way to add them together in 1x1 degrees of lat long. 
# However, I round to 0.5 because afterwards, the SST is at each 0.5 

orig_data_cords_one = full_dataset %>% dplyr::mutate(Long_one = round_05(Longitude), Lat_one = round_05(Latitude))

# To do a temporal analysis, I select only those sites with 5 or more years of data

# Total number of sites

orig_data_cords_one %>% ungroup() %>% dplyr::select(Long_one, Lat_one) %>% distinct() # Total of 562 sites

# Of these, the median number of years per each site is 14.
orig_data_cords_one %>% ungroup() %>% dplyr::select(Year, Long_one, Lat_one) %>% distinct() %>% group_by(Long_one, Lat_one) %>% count() %>% summary()

# I keep sites with more than 5 years of data

sel_cells_one = 
  orig_data_cords_one %>%
  ungroup() %>% dplyr::select(Year, Long_one, Lat_one) %>%
  distinct() %>% group_by(Long_one, Lat_one) %>% count() %>%
  filter(n > 4) %>% mutate(site = paste(Long_one, Lat_one))

sel_cells_one # 416 sites with 5 or more years of data 
plot(Lat_one ~ Long_one, data = sel_cells_one)

# This gives me the number of original sites within each new defined site
sites = orig_data_cords_one %>%
  ungroup() %>% 
  mutate(site = paste(Long_one, Lat_one)) %>%
  filter(site %in% sel_cells_one$site) %>% select(Long_one, Lat_one, Year) %>% distinct()
  
  
sites_per_new_site_one =   
  orig_data_cords_one %>% 
  ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% 
  dplyr::select(Long_one, Lat_one, Longitude, Latitude, Year) %>% 
  distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% 
  count()

# I gather all the species found (Presence data) within each degree of Lat Long, 
# And I sum all the effort (swept area) from all the trawling events at each degree of long lat.
# I am not loosing any richness and effort data, only spatial resolution.
# However, I need two dataframes: One with species at each site, and one with effort at each site, and then merge()

richness_new_site = 
  orig_data_cords_one %>% ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% # I keep only the sites with more than 5 years of data. 
  dplyr::select(Long_one, Lat_one, Year,valid_name) %>% distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% summarise(richness = n())

  
effort_new_site = 
  orig_data_cords_one %>% ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% # I keep only the sites with more than 5 years of data. 
  dplyr::select(Long_one, Lat_one, Year, swept_area) %>% distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% summarise(area = sum(swept_area),
                                                  trawls = n())

  
richness_effort_data = merge(richness_new_site, effort_new_site, by = c("Long_one", "Lat_one", "Year"))  # A total of 7905 sites across 32 years

# Before adding temperature, I have 8426 cells distributed across 32 years. 

# To calculate the 95% CI around the mean of a poisson distributed data, I need to find lambda (the mean) and 
# lambda +- 1.96 * sqrt(lambda/n)
# 1.96 is the value of the 95% probability edge in a poisson distribution. 

lambda_CI = richness_effort_data %>% group_by(Year) %>%
  summarise(lambda = mean(richness),
            n = n()) %>%
  mutate(lower_edge = lambda - 1.96 * sqrt(lambda / n),
         higher_edge = lambda + 1.96 * sqrt(lambda/n)) %>%
  print(n = 32)

cor(lambda_CI$lambda, lambda_CI$n)
plot(lambda_CI$lambda, lambda_CI$n) 

# There is a correlation between number of cells per year (n), and species richness per cell (lambda). 
# I do not have an explanation for this, but there should not be causality between the number of species found 
# at each cell, and the total number of cells per year. 


# When gathering the trawlings in 1x1 lat long cells, some cells contain several trawls. 
# This increases the area a lot in these cells, and this needs to be considered when looking for potential biases. 
# Also, it looks as if there was less area per each site from 2011 onwards, although there were more cells.
# This trend would diminish if I selected points with even more
# years, not only more than 5 years of data but maybe 15. 


boxplot(area ~ Year, richness_effort_data) # Quite similar area across time! However, a lot of variability

plot(table(richness_effort_data$Year)) # More cells in the last years.
boxplot(n ~ Year, sites_per_new_site_one)
boxplot(n ~ Year, sites_per_new_site_one, ylim = c(0,50)) # Quite homogeneous distribution of #trawls/cell, though some big outliers (a cell with >100 trawls in 2004)
boxplot(area ~ Year, richness_effort_data, ylim = c(0,50)) # Less area from 2011 onwards

# This trend needs to be considered. First 10 years have less points in the whole area,
# but each point does not contain less trawling, neither less area! (Actually contains more area)
# Even if there is an overall decline in swept area, this would imply that our results would be exacerbated, 
# therefore we are staying on the conservative side of the interpretation. 

# Novel spatial organisation also deserves a plot per year

#pdf("data_across_sites_novel.pdf", height = 20, width = 20)
#ggplot(richness_effort_data, aes(x = Long_one, y = Lat_one)) + geom_point() + facet_wrap(.~ Year)
#dev.off()

# Here all the plots for data exploration

a = ggplot(sites, aes(x = Year)) + geom_bar() + xlab("Year")
b = ggplot(sites_per_new_site_one, aes(as.factor(Year), y = n)) + geom_boxplot(outlier.size = 0.1) + xlab("Year") + ylim(0,50)
c = ggplot(richness_effort_data, aes(x = as.factor(Year), y = area)) + geom_boxplot(outlier.size = 0.1) + ylim (0,200)+ xlab("Year")
d = ggplot(richness_effort_data, aes(x = as.factor(Year), y = Lat_one)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")
e = ggplot(richness_effort_data, aes(x = as.factor(Year), y = Long_one)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")


grid.arrange(a,b,c,d,e, ncol = 2)

write.csv(richness_effort_data, "richness_in_1x1_cells.csv", row.names = F)

# The data is now ready for exploratory statistical modelling. 
# I want to model how has richness changed at each cell with time and latitude. 
# For this, I need a Poisson distribution family (richness --> Count data)
# And I need to include area (effort) as an explanatory variable

#### MODELS #####

richness_effort_data$ID = sample(1:nrow(richness_effort_data)) # I may needed later

# This is the most simple model that I want to fit

mod1 = glm(richness ~ Year + area + Lat_one, data = richness_effort_data, family = poisson)
mod2 = glm(richness ~ Year + log(area) + Lat_one, data = richness_effort_data, family = poisson)
mod3 = glm(richness ~ Year + Lat_one + offset(log(area)), data = richness_effort_data, family = poisson)

par(mfrow = c(2,2)); plot(mod1) # Some strong otuliers, probably because super high sampled area in those cells
par(mfrow = c(2,2)); plot(mod2) # There is heteroscedasticity at high predicted values
par(mfrow = c(2,2)); plot(mod3) # Bad model 

# The area is way better included as an explanatory variable and not as an offset. 
# The offset is basically an explanatory variable with coefficient = 1. This makes sense normally, but not 
# here because more area does not necessarily mean more species if the smaller area is enough to sample
# the area. In this case, we do not observe a linear increase of species records with sampled area, neither
# does it make theoretical sense. (If all species area recorded, more area will not increase the number of species recorded)

# I check for overdispersion 

deviance(mod2)/mod2$df.residual
dispersiontest(mod2) # A little overdispersed but not too much. I could try nb() to see if clear improvement

mod4 = glm.nb(richness ~ Year + log(area) + Lat_one, data = richness_effort_data)
summary(mod4)
par(mfrow = c(2,2)); plot(mod4) #  Not clear improvement

# The following points are highly influential

influencePlot(mod2)
richness_effort_data[c(3577, 4837, 4868, 6574, 7619, 7953),] # Some have very high swept area... but this should be ok when applying gam 
summary(richness_effort_data)

# GAM modeling to fit non linear relationship mainly of area, to richness. A log scale in glm() is not enough

boxplot(area ~ Year, richness_effort_data)

simple_gam_1 = gam(richness ~ Year + Lat_one + s(area), data = richness_effort_data, family = poisson) 

summary(simple_gam_1) 

par(mfrow = c(2,2)); gam.check(simple_gam_1, type = "pearson")

# There is strong heteroscedasticity, maybe because I am not considering the random effect of the Site, which would 
# refer to the spatial autocorrelation. 

simple_gam_cor_site = gamm(richness ~ Year + s(area, k = 5) + Lat_one,
                               family = poisson,
                               random = list(Long_one = ~ 1),
                               data = richness_effort_data)

summary(simple_gam_cor_site$gam)
summary(simple_gam_cor_area_sst$lme)

par(mfrow = c(2,2)); gam.check(simple_gam_cor_site$gam, type = "pearson") # The residuals improva a little, less conic shape. 
anova(simple_gam_cor_area_sst$gam)

# I add interaction terms and a smooth term for year. The effect of area and latitude in richness
# may have differed with time

simple_gam_cor_site_2 = gamm(richness ~ 
                               s(Year, k = 5) + 
                               s(area, k = 5) +
                               Lat_one +
                               ti(Year, area) +
                               ti(Year, Lat_one),
                           family = poisson,
                           random = list(Long_one = ~ 1),
                           data = richness_effort_data)

summary(simple_gam_cor_site_2$gam) 
par(mfrow = c(2,2));gam.check(simple_gam_cor_site_2$gam) # Less conic shape. 

#  I try adding an atuocorrelation term with time and site

simple_gam_autocorcor_site_ = gamm(richness ~ 
                               s(Year, k = 5) + 
                               s(area, k = 5) +
                               Lat_one +
                               ti(Year, area) +
                               ti(Year, Lat_one),
                               correlation = corAR1(form = ~ Year | ID),
                               family = poisson,
                               random = list(Long_one = ~ 1),
                               data = richness_effort_data)

summary(simple_gam_autoccor_site_2$gam) 
par(mfrow = c(2,2));gam.check(simple_gam_autocor_site_2$gam) # Nothing changes

## The inclusion of an autocorrelation term does not really improve the model.
#  After adding tensor products, maybe it is no longer needed to have Latitude and Year as effects. 
#  If I eliminate Latitude and Year, I loose a lot of r2, but the residuals are better. 
#  If I include Year but eliminate Latitude, the residuals get a little better but I almot not loose r2.

simple_gam_cor_site_4 = gamm(richness ~ 
                               s(Year, k = 6) + 
                               s(area, k = 5)+
                               #s(Lat_one) ,
                               #ti(Year, area) +
                               ti(Year,Lat_one),
                             family = poisson,
                             random = list(Long_one = ~ 1),
                             data = richness_effort_data)

summary(simple_gam_cor_site_4$gam)
par(mfrow = c(2,2));
gam.check(simple_gam_cor_site_4$gam) 
abline(1,1, col = "red") # my model underestimates at high values and overestimates a little at low values, but its pretty good. 


# The best model is therefore simple_gam_cor_site_4, which has a random element on Longitude
# And includes an interaction term between year and latitude. 
# If area is not included in the model, the model fulfills all the assumptions, though looses r2. 
# However, the inclusion of swept area is compulsory in order to understand changes in richness with time. 
# This is the case because there exists a pattern of swept area with time which needs to be included in the model. 

#### GAM visualisation ### ####
draw(simple_gam_cor_site_4$gam)

a = plot_model(simple_gam_cor_site_4,type = "pred", 
           terms = c("Year"), show.data = T, dot.alpha = 0.05, dot.size = 0.3) +
  scale_colour_continuous() + ggtitle("Richness across time")

b = plot_model(simple_gam_cor_site_4, type = "pred", 
           terms = c("Lat_one"), show.data = T, dot.alpha = 0.05, dot.size = 0.3) +
  scale_colour_continuous() + ggtitle("Richness across temperature")

c = plot_model(simple_gam_cor_site_4, type = "pred", 
           terms = c("area"), show.data = T, dot.alpha = 0.05, dot.size = 0.3) +
  scale_colour_continuous() + ggtitle("Richness across temperature")

# Graph of richness changes across time and Latitude

pdf("gam_temp_year_richness.pdf", height = 3.5, width = 7)
plot_model(simple_gam_cor_site_4,type = "pred", 
           terms = c("Year", "Lat_one"), show.data = T, dot.alpha = 1, dot.size = 0.9)  +
  scale_colour_continuous() + ggtitle("Richness across time")

dev.off()


# Graph of response variables
pdf("predictors_gam_richness.pdf", height = 2.5, width = 8)

grid.arrange(a,b,c, ncol = 3)

dev.off()
