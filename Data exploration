### 1. Library ### ####
library(tidyverse)
library(mgcv)
library(sjPlot)
library(AER)
library(MASS)
library(raster)
library(tidyverse)
library(gridExtra)

### 2. My functions ### ####

round_05 <- function(x) {
  if (round(x) > x) {round(x) - 0.5}
  else if (round(x) <= x) {round(x) + 0.5}
}
variance <- function(x){sum((x-mean(x))^2)/length(x)}
se <- function(x) {sqrt(variance(x))/sqrt(length(x))}

### 3. Exploratory analysis and some further cleaning ### ####

# The whole data analysis is done using two approaches. On the one hand, I analyse the raw data
# considering each trawling event as a singular sampling site, and look at the change of 
# species richness found per sampling event, with time and latitude. This way considers n = 26 038 sites
# From these, there is more than 1 swept area for some sites, because more than 1 event occurred in a year (this happens only in 45 sites) 
# Load data, unselect max_length and min_length, because they contain many NAs and not needed for the analysis

# On the other hand, if I group by 1x1 cells of longitude and latitude, the picture changes a little and 
# the models are better fit, but I lose information. Also, I lose points close to the coast, which are highly relevant. 

# The data frame with richness at each trawling will be called "richness_pure", with the sites being "sites_pure"

# The data frame with richness at 1x1 lat long cell will be called " richness_cells" with the sites being "sites_cells" 

# START #

## Data load and remove of useless columns with NAs

full_dataset = read_csv("data_filtered_seas.csv")
full_dataset = full_dataset %>% select(- Max_length, - Min_length)

# Swept area transformation to Km2 instead of m2, and exploration of effort distribution with time, and range 

full_dataset$swept_area = full_dataset$swept_area / 10000 
boxplot(swept_area ~ Year, data = full_dataset)
range(full_dataset$swept_area) # From 0.5 to 28.5 Km2

# Figure of the geographical distribution of the effort, this figure could be added to the supplementary material to report the survey area across years. 

pdf("data_across_sites.pdf", height = 20, width = 20)
ggplot(full_dataset, aes(x = Longitude, y = Latitude)) + geom_point() + facet_wrap(.~ Year)
dev.off()

# Now the idea is to get an extra column with coordinates round to 0.5, so that I keep the identity of each trawling
# but also get a way to add them together in 1x1 degrees of lat long. 
# However, I round to 0.5 because afterwards, the SST is at each 0.5 

orig_data_cords_one = full_dataset %>% dplyr::mutate(Long_one = round_05(Longitude), Lat_one = round_05(Latitude))

# I could retain only sites with 5 or more years of data (or any other threshold)

# Total number of sites

orig_data_cords_one %>% ungroup() %>% dplyr::select(Long_one, Lat_one) %>% distinct() # Total of 562 sites

# Of these, the median number of years per each site is 14.
orig_data_cords_one %>% ungroup() %>% dplyr::select(Year, Long_one, Lat_one) %>% distinct() %>% group_by(Long_one, Lat_one) %>% count() %>% summary()

# I keep sites with more than 5 years of data

sel_cells_one = 
  orig_data_cords_one %>%
  ungroup() %>% dplyr::select(Year, Long_one, Lat_one) %>%
  distinct() %>% group_by(Long_one, Lat_one) %>% count() %>%
  filter(n > 4) %>% mutate(site = paste(Long_one, Lat_one))

sel_cells_one # 416 sites with 5 or more years of data 
plot(Lat_one ~ Long_one, data = sel_cells_one)

# This gives me the number of original sites within each new defined site
sites_cells = orig_data_cords_one %>%
  ungroup() %>% 
  mutate(site = paste(Long_one, Lat_one)) %>%
  filter(site %in% sel_cells_one$site) %>% select(Long_one, Lat_one, Year) %>% distinct()
  
  
sites_per_new_site_one =   
  orig_data_cords_one %>% 
  ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% 
  dplyr::select(Long_one, Lat_one, Longitude, Latitude, Year) %>% 
  distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% 
  count()

richness_pure = full_dataset %>% ungroup()  %>% dplyr::select(valid_name, Longitude, Latitude, Year, swept_area, Bot_depth) %>% 
  distinct() %>% group_by(Longitude, Latitude, Year, swept_area, Bot_depth) %>% summarise(richness = n())

sites_pure = full_dataset %>% ungroup() %>% select(Longitude, Latitude, Year) %>% distinct()

# I gather all the species found (Presence data) within each degree of Lat Long, 
# And I sum all the effort (swept area) from all the trawling events at each degree of long lat.
# I am not loosing any richness and effort data, only spatial resolution.
# However, I need two dataframes: One with species at each site, and one with effort at each site, and then merge()

richness_new_site = 
  orig_data_cords_one %>% ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% # I keep only the sites with more than 5 years of data. 
  dplyr::select(Long_one, Lat_one, Year,valid_name) %>% distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% summarise(richness = n())

  
effort_new_site = 
  orig_data_cords_one %>% ungroup() %>%
  mutate(site = paste(Long_one, Lat_one)) %>% 
  filter(site %in% sel_cells_one$site) %>% # I keep only the sites with more than 5 years of data. 
  dplyr::select(Long_one, Lat_one, Year, swept_area) %>% distinct() %>% 
  group_by(Long_one, Lat_one, Year) %>% summarise(area = sum(swept_area),
                                                  trawls = n())

  
richness_cells = merge(richness_new_site, effort_new_site, by = c("Long_one", "Lat_one", "Year"))  # A total of 8426 sites across 32 years

# Before adding temperature, I have 8426 cells distributed across 32 years. 

# To calculate the 95% CI around the mean of a poisson distributed data, I need to find lambda (the mean) and 
# lambda +- 1.96 * sqrt(lambda/n)
# 1.96 is the value of the 95% probability edge in a poisson distribution. 

lambda_CI = richness_cells %>% group_by(Year) %>%
  summarise(lambda = mean(richness),
            n = n()) %>%
  mutate(lower_edge = lambda - 1.96 * sqrt(lambda / n),
         higher_edge = lambda + 1.96 * sqrt(lambda/n)) %>%
  print(n = 32)

original_CI = richness_pure %>% group_by(Year) %>%
  summarise(lambda = mean(richness),
            n = n()) %>%
  mutate(lower_edge = lambda - 1.96 * sqrt(lambda / n),
         higher_edge = lambda + 1.96 * sqrt(lambda/n)) %>%
  print(n = 32)

cor.test(lambda_CI$lambda, lambda_CI$n)
plot(lambda_CI$lambda, lambda_CI$n) 

cor.test(original_CI$lambda, original_CI$n)
plot(original_CI$lambda, original_CI$n) 

# There is a correlation between number of cells per year (n), and species richness per cell (lambda) when grouping
# in 1x1 lat long cells. I do not have an explanation for this, but there should not be causality 
# between the number of species found at each cell, and the total number of cells per year. 


# When gathering the trawlings in 1x1 lat long cells, some cells contain several trawls. 
# This increases the area a lot in these cells, and this needs to be considered when looking for potential biases. 
# Also, it looks as if there was less area per each site from 2011 onwards, although there were more cells.
# This trend would diminish if I selected points with even more
# years, not only more than 5 years of data but maybe 15. 


boxplot(area ~ Year, richness_cells) # Quite similar area across time! However, a lot of variability

plot(table(richness_cells$Year)) # More cells in the last years.
boxplot(n ~ Year, sites_per_new_site_one)
boxplot(n ~ Year, sites_per_new_site_one, ylim = c(0,50)) # Quite homogeneous distribution of #trawls/cell, though some big outliers (a cell with >100 trawls in 2004)
boxplot(area ~ Year, richness_cells, ylim = c(0,50)) # Less area from 2011 onwards

# This trend needs to be considered. First 10 years have less points in the whole area,
# but each point does not contain less trawling, neither less area! (Actually contains more area)
# Even if there is an overall decline in swept area, this would imply that our results would be exacerbated, 
# therefore we are staying on the conservative side of the interpretation. 

# Novel spatial organisation also deserves a plot per year

#pdf("data_across_sites_novel.pdf", height = 20, width = 20)
#ggplot(richness_cells, aes(x = Long_one, y = Lat_one)) + geom_point() + facet_wrap(.~ Year)
#dev.off()

# Here all the plots for data exploration

a = ggplot(sites_cells, aes(x = Year)) + geom_bar() + xlab("Year")
b = ggplot(sites_per_new_site_one, aes(as.factor(Year), y = n)) + geom_boxplot(outlier.size = 0.1) + xlab("Year") + ylim(0,50)
c = ggplot(richness_cells, aes(x = as.factor(Year), y = area)) + geom_boxplot(outlier.size = 0.1) + ylim (0,200)+ xlab("Year")
d = ggplot(richness_cells, aes(x = as.factor(Year), y = Lat_one)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")
e = ggplot(richness_cells, aes(x = as.factor(Year), y = Long_one)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")

# All plots for data exploration without gathering in 1x1 cells

f = ggplot(sites_pure, aes(x = Year)) + geom_bar() + xlab("Year")
g = ggplot(richness_pure, aes(x = as.factor(Year), y = swept_area)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")
h = ggplot(richness_pure, aes(x = as.factor(Year), y = Latitude)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")
i = ggplot(richness_pure, aes(x = as.factor(Year), y = Longitude)) + geom_boxplot(outlier.size = 0.1) + xlab("Year")



grid.arrange(a,b,c,d,e, ncol = 2)

grid.arrange(f,g,h,i, ncol = 2)

write.csv(richness_cells, "richness_in_1x1_cells.csv", row.names = F)
write.csv(richness_pure, "richness_all_sites.csv", row.names = F)

# The data is now ready for exploratory statistical modelling. 
# I want to model how has richness changed at each trawling with time and latitude. 
# For this, I need a Poisson distribution family (richness --> Count data)
# And I need to include area (effort) as an explanatory variable

# I will do the analysis on the richness_pure, because in my opinion it makes no sense to transform the data 
# for now.  

#### MODELS #####

richness_cells$ID = sample(1:nrow(richness_cells)) # I may needed later
richness_pure$ID = sample(1:nrow(richness_pure)) # I may needed later

# Model selection 

mod1 = glm(richness ~ Year + area + Lat_one, data = richness_cells, family = poisson)
mod2 = glm(richness ~ Year + log(area) + Lat_one, data = richness_cells, family = poisson)
mod3 = glm(richness ~ Year + Lat_one + offset(log(area)), data = richness_cells, family = poisson)

mod1_p = glm(richness ~ Year + offset(log(swept_area)), data = richness_pure, family = poisson)
mod2_p = glm(richness ~ Year + swept_area, data = richness_pure, family = poisson)
mod3_p = glm(richness ~ Year + swept_area + Latitude + Year:Latitude, data = richness_pure, family = poisson)
mod4_p = glm(richness ~ Year + log(swept_area) + Latitude, data = richness_pure, family = poisson)
mod5_p = glm(richness ~ Year + Latitude + offset(log(swept_area)), data = richness_pure, family = poisson)


summary(mod1_p)
summary(mod2_p)
summary(mod3_p)
summary(mod4_p)
summary(mod5_p)

par(mfrow = c(2,2)); plot(mod1_p) # 
par(mfrow = c(2,2)); plot(mod2_p) # Pretty good model. It is better to include the swept area as an explanatory variable, not as an offset 
par(mfrow = c(2,2)); plot(mod3_p) # Pretty good model, thought the residuals vs leverage not perfect 
par(mfrow = c(2,2)); plot(mod4_p) # Pretty good model 
par(mfrow = c(2,2)); plot(mod5_p)

# I try to fit a gam model: 
  
  # - Year could have a non linear effect to richness
  # - Swept area should be ok with a logarithmic scale fit, but its not. 
  # - However, a smooth term for latitude makes no biological sense
  # - Though an interaction term between Year and Latitude with a small number of knots 
  #   could help to see if annual change of richness changes between latitudes. 

mod4_p =  gam(richness ~ s(swept_area) + s(Year, by = Latitude), data = richness_pure, family = poisson)

summary(mod4_p)
par(mfrow = c(2,2)); gam.check(mod4_p, type = "pearson")
abline(1,1, col = "red")

mod5_p =  gam(richness ~ s(Year, k = 5) + s(Year, by = Latitude) + Latitude + s(swept_area), data = richness_pure, family = poisson)

summary(mod5_p)
par(mfrow = c(2,2)); gam.check(mod5_p, type = "pearson")
abline(1,1, col = "red")


mod6_p =  gam(richness ~ s(Year, k = 4) + s(Year, by = Latitude, k = 3) + s(swept_area) + ti(Latitude, Longitude),
              data = richness_pure,
              family = poisson)

summary(mod6_p)
par(mfrow = c(2,2)); gam.check(mod6_p, type = "pearson")
abline(1,1, col = "red")

cor.test(predict(mod6_p), richness_pure$richness)

gam.fit(mod6_p)
mod6_p =  gam(richness ~ s(Year, k = 4) + s(Year, by = Latitude, k = 3) + s(swept_area) + ti(Latitude, Longitude),
              data = richness_pure,fit = T,
              family = poisson)

summary(mod6_p)
par(mfrow = c(2,2)); gam.check(mod6_p, type = "pearson")
abline(1,1, col = "red")

gam.fit(mod7_p)
mod7_p =  gam(richness ~ s(Year, k = 4) + s(swept_area) + ti(Latitude, Longitude),
              data = richness_pure,
              family = poisson) 

summary(mod7_p)
par(mfrow = c(2,2)); gam.check(mod7_p, type = "pearson")
abline(1,1, col = "red")

mod8_p =  gam(richness ~ s(Year, k = 4) + ti(Latitude, Longitude),
              data = richness_pure,
              family = poisson) 

summary(mod8_p)
par(mfrow = c(2,2)); gam.check(mod8_p, type = "pearson")
abline(1,1, col = "red")

cor.test(predict(mod1_p), richness_pure$richness)
cor.test(predict(mod2_p), richness_pure$richness)
cor.test(predict(mod3_p), richness_pure$richness)
cor.test(predict(mod4_p), richness_pure$richness)
cor.test(predict(mod5_p), richness_pure$richness)
cor.test(predict(mod6_p), richness_pure$richness) # Best model in terms of correlation, but more complex and just slightly model. 
cor.test(predict(mod7_p), richness_pure$richness) # Best model --> Model very similar to the previous one, but simpler 
cor.test(predict(mod8_p), richness_pure$richness) # Interestingly, the removal of swept area does not affect the model so much

summary(mod1_p)
summary(mod2_p)
summary(mod3_p)
summary(mod4_p)
summary(mod5_p)
summary(mod6_p)
summary(mod7_p)



# mod7_p is the best model that I can get without data transformation and without including environmental data. 
# Year has a clear positive effect in species richness with time, which does not change much with Latitude. 

# I check for overdispersion 

deviance(mod7_p)/mod7_p$df.residual
dispersiontest(mod7_p) # Not overdispersed :) 

### GAM visualisation ### ####
draw(mod7_p)

a = plot_model(mod7_p,type = "pred", 
               terms = c("Year"), show.data = T, dot.alpha = 0.05, dot.size = 0.3) +
  scale_colour_continuous() + ggtitle("Richness across time")

b = plot_model(mod7_p, type = "pred", 
               terms = c("swept_area"), show.data = T, dot.alpha = 0.05, dot.size = 0.3) +
  scale_colour_continuous() + ggtitle("Richness across temperature")

# Graph of richness changes across time and Latitude

pdf("gam_temp_year_richness.pdf", height = 3.5, width = 7)
plot_model(mod7_p,type = "pred", 
           terms = c("Year"), show.data = T, dot.alpha = 1, dot.size = 0.9)  +
  scale_colour_continuous() + ggtitle("Richness across time")

dev.off()


# Graph of response variables
pdf("predictors_gam_richness.pdf", height = 2.5, width = 8)

grid.arrange(a,b,c, ncol = 3)

dev.off()
