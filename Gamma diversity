###### Library ###### ####

library(tidyverse)
library(vegan)
library(conflicted)

conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
preparation_sp = read_csv("C:/Users/06061016/Documents/Treball/Costello/IMR1980-2017/Final analysis/data_filtered_seas.csv")
preparation_sp = preparation_sp %>% group_by(Longitude, Latitude, Year) %>% mutate(Bot_depth = mean(Bot_depth),swept_area = mean(swept_area)) %>% ungroup()

colSums(is.na(preparation_sp)) #42938 NAs! 
preparation_sp = preparation_sp %>% select(-Max_length, -Min_length)


# Some entrances haves same longitude, latitude, year and swept area, but slightly different bot depths ( i.e 400 vs 402 m)
# Next line is to get the same depth for all the entrances with same long, lat, year and effort. 

preparation_sp$swept_area = preparation_sp$swept_area/10000  # from m2 to km2
preparation_sp <- preparation_sp %>% mutate(Longitude = round_05(Longitude), Latitude = round_05(Latitude))
preparation_sp <- preparation_sp %>%  mutate(Site = paste(Longitude, Latitude))


# I remove the spaces from the Sea names, because afterwards they may cause problems
preparation_sp$Sea = gsub( " ", "",preparation_sp$Sea) 

# I sum all the effort at each year, because here we are interested in gamma diversity, all the species richness in the area
# This makes the number of trawls irrelevant, but not the total km2 sampled. These should be relatively constant across time
# or at least, its trend should not drive the trend in species richness across time. 

annual_effort = preparation_sp %>% select(Year, Longitude, Latitude, Bot_depth, swept_area) %>% distinct() %>% group_by(Year) %>% summarise(annual_swept = sum(swept_area))
plot(annual_swept ~ Year, annual_effort)

# These two lines shoud not be relevant in the consideration of Gamma diversity, but I look at them to keep in mind their 
# shapes and assure that I made no mistake in the analyses afterwards. Interestingly, the number of sites per year is 
# similar to the total swept area, but not exactly the same, because the swept area per trawl decreased with time. 

preparation_sp %>% select(Site, Year) %>% distinct() %>% group_by(Year) %>% count() %>% print(n = 32) %>% ggplot(., aes(x = Year, y = n)) + geom_point()
boxplot(preparation_sp$swept_area ~ preparation_sp$Year, ylim = c(0,50))

# This line selects a quite even number of sites and swept area across time, but reduces the total effort substantially. 
# This allows for comparisson across time, considering an effort quite more even . 

preparation_sp_ten = preparation_sp %>% filter(swept_area > 9 & swept_area < 12)

preparation_sp_ten %>% select(Site, Year) %>% distinct() %>% group_by(Year) %>% count() %>% print(n = 32)
boxplot(preparation_sp_ten$swept_area ~ preparation_sp_ten$Year, ylim = c(5,15))

preparation_sp %>% select(Year, valid_name) %>% distinct() %>% group_by(Year) %>% count() %>% print(n = 32)
preparation_sp_ten %>% select(Year, valid_name) %>% distinct() %>% group_by(Year) %>% count() %>% print(n = 32)


# The following forloop assigns a new column to the dataframe, with the ratio of effort/annual_effort that year.
# With this, I can weight each site with the importance in terms of effort. 
 
resu = list()

for (i in 1989:2020) {
  data = filter(preparation_sp, Year == i)
  annual = filter(annual_effort, Year == i)
  annual_eff = annual$annual_swept
  data$swept_area_ratio = data$swept_area/annual_eff 
  resu[[i]] = data
}

results = do.call(rbind,resu)

results %>% select(Longitude, Latitude, Bot_depth, Year, swept_area_ratio) %>% distinct() %>% group_by(Year) %>% summarise(prop = sum(swept_area_ratio))
data_sac = results

data_sac$Abundance_rel = data_sac$Total_abund * data_sac$swept_area_ratio

# I realize that the median relative abundance when standardised by the effort ratio, does not differ so much across time
# However, the range does! 

boxplot(Abundance_rel ~ Year, data = data_sac, ylim= c(0,0.2))

data_sac = data_sac %>% mutate(Longitude = round_05(Longitude), Latitude = round_05(Latitude))
data_sac = data_sac %>% mutate(Site = paste(Longitude, Latitude, Year, Bot_depth))

i = 2000
df_alpha_years = list()


# Next two functions calculate the species accumulation curves per each year 

preparation_sp$Total_abund = 1

sac_curves_random <- function(data) {for (i in 1989:2020) {
  df_alpha_i <- data %>% filter(Year == i) 
  table_i    <- xtabs(Total_abund ~ Site + valid_name,df_alpha_i)
  SAC_i      <- specaccum(table_i, method = "random", permutations = 200)
  data_df_i <- data.frame(Sites=SAC_i$sites, Richness=SAC_i$richness, SD=SAC_i$sd,points = rownames(table_i), Year = i)
  
  df_alpha_years[[i-1988]] = data_df_i
  print(paste("Year", i, "to 2020"))
} 
  do.call(rbind, df_alpha_years)
}

sac_curves_rarefaction <- function(data) {for (i in 1989:2020) {
  df_alpha_i <- data %>% dplyr::filter(Year == i) 
  table_i    <- xtabs(as.integer(Total_abund) ~ Site + valid_name,df_alpha_i)
  SAC_i      <- specaccum(table_i, method = "exact")
  data_df_i <- data.frame(Sites = SAC_i$sites, Richness = SAC_i$richness, SD = SAC_i$sd,points = rownames(table_i), Year = i)
  
  df_alpha_years[[i-1988]] = data_df_i
  print(paste("Year", i, "to 2020"))
} 
  do.call(rbind, df_alpha_years)
}
## I calculate the SAC of all the data, to then have a look at the number of sites with which 95% of the total richness is captured. 
## Then, I can try to reduce the total number of sites and select those with the same survey area. 

df_alpha_years = list() # This is necessary because the function sac_curves_random() builds on a list called df_alpha_years() that needs to be created
sac_data_all = sac_curves_random(preparation_sp)

sac_data_rare = sac_curves_rarefaction(preparation_sp)

## I create a relative species richness per each year that accounts for the fraction of total species richness captured, and I select the first value after 0.95
sac_data_all %>% group_by(Year) %>% summarise(max = max(Richness)) %>% print(n = 32)

## The next line of code selects the line per year, when 90% of richness is achieved, in average (there are 200 permutations in the specaccum function)
sac_data_all %>% group_by(Year) %>% mutate(rel_sp_rich = Richness/ max(Richness)) %>% filter(rel_sp_rich >= 0.9) %>% top_n(-1) %>% print(n = 32)


total_sp = list()
sac_data_reduced = sac_curves_random(preparation_sp_ten)

labels_reduced = sac_data_reduced %>% group_by(Year) %>% summarise(Sites = max(Sites), Richness = max(Richness))
labels_complet = sac_data_all %>% group_by(Year) %>% summarise(Sites = max(Sites), Richness = max(Richness))
cc <- scales::seq_gradient_pal("royalblue4", "firebrick3")(seq(0,1,length.out=32)) # Color palette

# Visualisation of the species accumulation curves using only sites with similar effort 
plot(Latitude ~ Longitude, data = preparation_sp_ten)
boxplot(Latitude ~ Year, data = preparation_sp_ten) # Big latitudinal changes before and after 2010-11

ggplot() +
  geom_line(data = sac_data_reduced,  aes(x = Sites, y = Richness, color = as.factor(Year)), size = 1.8) + 
  ggtitle("Sites with similar effort")  +
  scale_colour_manual(values =  cc) +
  geom_text(data = labels_reduced, aes(x = Sites, y = Richness, label = Year)) + theme(legend.position="none")

boxplot(Richness ~ Year, data = sac_data_reduced) 

# There is not a marked increase or decrease from 2010 to 2011, which would be suspicious considering the differences in 
# latitude across time.

# Visualisation of the species accumulation curves on all sites across years. 

ggplot() + 
  geom_line(data = sac_data_all,  aes(x = Sites, y = Richness, color = as.factor(Year)), size = 1.8) + 
  ggtitle("All sites") +
  scale_colour_manual(values =  cc) +
  geom_text(data = labels_complet, aes(x = Sites + 40, y = Richness + 2, label = Year)) + theme(legend.position="none")

data = preparation_sp %>% 
  select(Longitude, Latitude, Year, swept_area) %>% 
  distinct() %>% group_by(Longitude, Latitude, Year) %>%
  summarise(area = sum(swept_area)) %>% boxplot(area~Year,., ylim = c(0,100))

# Conclusion: We see that there is an increase in species richness independent of the swept area at each site, because 
# the increase with time appears also when a highly restricted selection of sites is selected, with very similar effort. 
# Also, the direction of change in sp richness (increase with time) is the opposite to the change in effort (decline with time) 


### Regional analysis of SAC ### #####

















a = preparation_sp %>% group_by(Year) %>% summarise(max = max(swept_area),
                                                    min = min(swept_area),
                                                    mean = mean(swept_area),
                                                    count = n()) %>% print(n = 32)


plot(a$max ~ a$Year)
plot(a$min ~ a$Year)


data_gamma = merge(a,c)

corr.test(data_gamma)
model_gamma_0 = lm(Richness ~ Year + Sites + max + min + count, data = data_gamma)
model_gamma_1 = lm(Richness ~ mean + Sites + max + min + count, data = data_gamma)
model_gamma_2 = lm(Richness ~ Year, data = data_gamma) # Year is clearly the best explanatory variable for species richness
model_gamma_3 = lm(Richness ~ mean, data = data_gamma) # Mean is consistently worse variable than Year
model_gamma_4 = lm(Richness ~ Sites, data = data_gamma)

# Year and mean cannot go togehter, neither can Year and count, or count and sites.
# Therefore, the best model is: 
model_gamma_5 = lm(Richness ~ Year + Sites + max + min, data = data_gamma)
# But because sites, max and min are not significant, I can create a much simpler model: 
model_gamma_6 = lm(Richness ~ Year, data = data_gamma)
cor.test(data_gamma$Richness, data_gamma$Year)

summary(model_gamma_0)
summary(model_gamma_1)
summary(model_gamma_2)
summary(model_gamma_3)
summary(model_gamma_4)
summary(model_gamma_5)
summary(model_gamma_6)

plot(Richness ~ Year, data_gamma, main = "Total species recorded across years")
abline(model_gamma_6, col = "grey")




plot(Richness ~ mean, data = data_gamma)
plot(Richness ~ count, data = data_gamma) # Obviously richness and count (records) are related, since records are the Sites x species richness at that site! 
plot(Richness ~ Sites, data = data_gamma) # It also makes sense that richness and sites is somehow related, since more sites equals more effort in sampling

plot(Sites ~ Year, data = data_gamma)
plot(count ~ Year, data = data_gamma)
plot(Sites ~ count, data = data_gamma)


par(new = T)
plot(Richness ~ Year, data = data_gamma, col = "red", axes = F, xlab = "", ylab = "")
axis(side = 4,at = pretty(range(data_gamma$Richness)), col = "red")
mtext("Richness", side = 4, line = 3)

# A better approximation would be to select at random a little more than the minimum number of sites to achieve 95% of the richness
# and do this several times and observe if the patterns are still there 



##### Spec_accum_years ----------
head(preparation_sp)
df_alpha_years = list()
preparation_sp$Sea = gsub( " ", "",preparation_sp$Sea) 

df_alpha_years = list()

# I need another function for SAC in regions because now, the points also include the Sea!
preparation_sp$Coordinates = paste(preparation_sp$Longitude, preparation_sp$Latitude)
preparation_sp$Total_abund = 1
sac_curves_region <- function(data) {for (i in 1989:2020) {
  df_alpha_i <- data %>% filter(Year == i) %>% select(Coordinates, valid_name,Total_abund,Sea) %>% mutate(points = paste(Coordinates, Sea)) %>% select(points, valid_name, Total_abund)
  table_i    <- xtabs(Total_abund ~ points + valid_name, df_alpha_i)
  SAC_i      <- specaccum(table_i, method = "random", permutations = 200)
  data_df_i <- data.frame(Sites = SAC_i$sites, Richness=SAC_i$richness, SD=SAC_i$sd,points = rownames(table_i), Year = i)
  
  df_alpha_years[[i-1988]] = data_df_i
  print(paste("Year", i, "to 2020"))
} 
  do.call(rbind, df_alpha_years)
}


# Creation of the data frame after calculation of SAC curves in each region


# SAC calculation in each region 

sac_greenl = sac_curves_region(data = filter(preparation_sp, Sea == "GreenlandSea"))
sac_north  = sac_curves_region(data = filter(preparation_sp, Sea == "NorthSea"))
sac_norbar = sac_curves_region(data = filter(preparation_sp, Sea == "Norwegian-BarentsSea"))
sac_arctic = sac_curves_region(data = filter(preparation_sp, Sea == "ArcticSea"))


# Creation of the data frame after calculation of SAC curves in each region

data_final = rbind(sac_greenl, sac_north,sac_norbar, sac_arctic)
data_final <- separate(data_final, into = c("Lon", "Lat", "Sea"), points, sep = " ")

# Visualization of annual SAC curves across region


ggplot() +
  #geom_point(data=data_df_final, aes(x=Sites, y=Richness, color = Year))+
  geom_line(data = data_final,  aes(x = Sites, y = Richness, color = as.factor(Year)), size = 1.8)+
  facet_wrap(. ~ Sea, scales = "free")+
  #geom_ribbon(data=data_df_final ,aes(x=Sites, ymin=(Richness-2*SD),ymax=(Richness+2*SD)),alpha=0.2)+
  scale_colour_manual(values = cc)+
  labs(color = "Year")+
  ylab("Richness (# species)")+
  ggtitle("Annual species accumulation curves (SAC)") +
  theme(plot.title  = element_text(hjust = 0.5, size = 16),
        panel.grid  = element_blank(),
        axis.title  = element_text(size = 15),
        strip.text.x = element_text(size = 12),
        axis.text   = element_text(size = 14),
        legend.text = element_text(size = 12),
        legend.title= element_text(size = 14),
        plot.margin = unit(c(0.5,0.5,0.5,0.5),"cm"),
        #legend.position = c(0.45,-0.185),
        legend.spacing.x = unit(0, 'cm'),
        legend.title.align = 0.6)


# Comparison with effort across region. I plot each region species richness with year
# and I also add the effort in red, to be able to compare the trends. 

data_final_simple = data_final %>% group_by(Year, Sea) %>% summarise(richness = max(Richness))
  
ggplot(data = data_final_simple, 
       aes(y = richness, x = as.factor(Year))) + 
  geom_point() + 
  geom_boxplot(data = filter(preparation_sp, Sea != "NorthAtlantic"),
               aes(y = swept_area, x = as.factor(Year)), color = "red",outlier.shape = NA) +
  ylim(0,110) + 
  facet_wrap(. ~ Sea)

